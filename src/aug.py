import os
import pandas as pd
import torch
import torchvision.transforms as transforms
from torchvision.io import read_image
from torchvision.utils import save_image
from PIL import Image

# Load CSV ch·ª©a th√¥ng tin ·∫£nh
csv_path = "data/train.csv"
df = pd.read_csv(csv_path)

# ƒê·∫øm s·ªë l∆∞·ª£ng ·∫£nh trong m·ªói l·ªõp
class_counts = df['score'].value_counts()
max_count = class_counts.max()  # S·ªë l∆∞·ª£ng ·∫£nh l·ªõp nhi·ªÅu nh·∫•t
print("S·ªë l∆∞·ª£ng ·∫£nh m·ªói l·ªõp:\n", class_counts)

# ƒê·ªãnh nghƒ©a Data Augmentation
augment_transform = transforms.Compose([
    transforms.RandomHorizontalFlip(),
    transforms.RandomRotation(15),
    transforms.ColorJitter(brightness=0.2, contrast=0.2, saturation=0.2, hue=0.1),
    transforms.ToTensor()
])

# L∆∞u danh s√°ch ·∫£nh m·ªõi ƒë·ªÉ c·∫≠p nh·∫≠t CSV
new_data = []

# X·ª≠ l√Ω t·ª´ng l·ªõp b·ªã thi·∫øu
for class_label, count in class_counts.items():
    if count < max_count:
        num_augment = max_count - count  # C·∫ßn t·∫°o th√™m bao nhi√™u ·∫£nh
        class_images = df[df['score'] == class_label]['filename'].tolist()

        print(f"T·∫°o {num_augment} ·∫£nh m·ªõi cho l·ªõp {class_label}...")

        for i in range(num_augment):
            img_path = class_images[i % len(class_images)]  # L·∫∑p l·∫°i n·∫øu s·ªë ·∫£nh √≠t h∆°n c·∫ßn augment
            img_path = os.path.join("data/images/", img_path)
            image = read_image(img_path)  # ƒê·ªçc ·∫£nh th√†nh tensor (uint8)
            
            # Chuy·ªÉn tensor th√†nh PIL Image
            image = transforms.ToPILImage()(image)
            
            # √Åp d·ª•ng augmentation
            augmented_img = augment_transform(image)
            
            # T·∫°o t√™n ·∫£nh m·ªõi
            new_img_name = f"{os.path.basename(img_path).split('.')[0]}_aug{i}.jpg"
            save_path = f"data/train_augmented/{new_img_name}"
            os.makedirs(os.path.dirname(save_path), exist_ok=True)  # T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a c√≥
            save_image(augmented_img, save_path)

            # Ch·ªâ l∆∞u t√™n ·∫£nh + l·ªõp v√†o CSV
            new_data.append([new_img_name, class_label])

# T·∫°o dataframe m·ªõi v√† l∆∞u l·∫°i CSV
df_new = pd.DataFrame(new_data, columns=['image_name', 'score'])
df_final = pd.concat([df[['filename', 'score']], df_new.rename(columns={'image_name': 'filename'})], ignore_index=True)
df_final.to_csv("data/train_balanced.csv", index=False)

print("T·∫°o ·∫£nh augmentation & c·∫≠p nh·∫≠t CSV th√†nh c√¥ng! üéâ")